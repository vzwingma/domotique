# This is a basic workflow to help you get started with Actions

name: Build Tydom Bridge Docker Image

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master, tydom ]
  pull_request:
    branches: [ master, tydom ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


env:
  IMAGE_NAME: vzwingmadomatic/domoticz-tydom
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  # Push image to DockerHub
  build-push:

    runs-on: ubuntu-18.04
    env:      
      DOCKER_REGISTRY: kemansel.azurecr.io      
      DOCKER_IMAGE: kmansel/express-me      
      DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}  
      DOCKER_TARGET_PLATFORM: linux/arm/v7                 

    if: github.event_name == 'push'

    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: |
          cp tydom-bridge/* _docker/build_tydom
          cd _docker/build_tydom
          docker build . --file Dockerfile --tag $IMAGE_NAME

      - name: Log into registry
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Push image
        run: |
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          echo IMAGE_NAME=$IMAGE_NAME
          echo VERSION=$VERSION

          docker tag $IMAGE_NAME $IMAGE_NAME:$VERSION
          docker push $IMAGE_NAME:$VERSION
