# This is a basic workflow to help you get started with Actions

name: Build Tydom Bridge ARM Docker Image

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master, feat/tydom ]
  pull_request:
    branches: [ master, feat/tydom ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # Scan to Sonar
  scan-sonar:
    runs-on: ubuntu-latest

    steps:
      - 
        name: Checkout the code  
        uses: actions/checkout@v3
      # Setup Node.js (for Sonar)
      - 
        name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '12' 
      # Run the Sonar scan
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        with:
          projectBaseDir: tydom-bridge
          args: >
            -Dsonar.organization=vzwingma-github
            -Dsonar.projectKey=tydom_bridge
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          sonar.projectKey: tydom_bridge
          sonar.organization: vzwingma-github

  # Push image to DockerHub
  build-push-tydom:

    runs-on: ubuntu-latest
    needs: 
      - scan-sonar
    env:      
      DOCKER_REGISTRY: registry.hub.docker.com
      DOCKER_IMAGE: vzwingmadomatic/domoticz-tydom
      DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}  
      DOCKER_TARGET_PLATFORM: linux/arm/v7

    permissions:
      contents: read

    steps:
      - 
        name: Checkout the code  
        uses: actions/checkout@v4
      - 
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      # https://github.com/docker/setup-buildx-action
      - 
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - 
        name: Log into registry
        run: echo "$DOCKER_PASSWORD" | docker login -u $DOCKER_USERNAME --password-stdin
      - 
        name: Get image metadata
        run: |
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          echo "DOCKER_IMAGE_TAG=$DOCKER_IMAGE:$VERSION" >> $GITHUB_ENV

      - name: Build ARM image
        run: |
          cp tydom-bridge/* _docker/build_tydom
          cd _docker/build_tydom
          docker buildx build --platform ${{ env.DOCKER_TARGET_PLATFORM }}  --file Dockerfile --tag ${{ env.DOCKER_IMAGE_TAG }} --output type=image,push=true .
