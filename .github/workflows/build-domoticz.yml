# This is a basic workflow to help you get started with Actions

name: Build Domoticz ARM Docker Image

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master, feat/scripts ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # Download Linky Script
  download-linky:

    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - 
        name: Checkout the code Linky
        uses: actions/checkout@v4
        with:
            repository: guillaumezin/DomoticzLinky
            ref: refs/heads/master
      # Upload plugin Linky
      - uses: actions/upload-artifact@v4
        name: Upload Python script
        with:
            name: linky-plugin
            path: /home/runner/work/domotique/domotique/*.py
  # Download DeCONZ Script
  download-deconz:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - 
        name: Checkout the code DeCONZ
        uses: actions/checkout@v4
        with:
            repository: Smanar/Domoticz-deCONZ
            ref: refs/heads/master
      # Upload plugin deCONZ
      - uses: actions/upload-artifact@v4
        name: Upload Python scripts
        with:
            name: deconz-plugin
            path: /home/runner/work/domotique/domotique/*.py
  # Push image to DockerHub
  build-push-domoticz:

    runs-on: ubuntu-latest
    environment: PROD
    needs: 
      - download-linky
      - download-deconz
    env:      
      DOCKER_REGISTRY: registry.hub.docker.com
      DOCKER_IMAGE: vzwingmadomatic/domoticz
      DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}  
      DOCKER_TARGET_PLATFORM: linux/arm/v7

    permissions:
      contents: read
    steps:
      - 
        name: Checkout the code  
        uses: actions/checkout@v4
      - 
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      # https://github.com/docker/setup-buildx-action
      - 
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - 
        name: Log into registry
        run: echo "$DOCKER_PASSWORD" | docker login -u $DOCKER_USERNAME --password-stdin
      - 
        name: Get image metadata
        run: |
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          echo "DOCKER_IMAGE_TAG=$DOCKER_IMAGE:$VERSION" >> $GITHUB_ENV
      - 
        uses: actions/download-artifact@v5
        name: Download Script Linky
        with:
          name: linky-plugin
          path: _docker/build_domoticz/linky
      - 
        uses: actions/download-artifact@v5
        name: Download Script deCONZ
        with:
          name: deconz-plugin
          path: _docker/build_domoticz/deconz          
      - name: Build ARM image
        run: |
          cp domoticz/scripts/dzVents/*.lua _docker/build_domoticz
          cd _docker/build_domoticz
          docker buildx build --platform ${{ env.DOCKER_TARGET_PLATFORM }}  --file Dockerfile --tag ${{ env.DOCKER_IMAGE_TAG }} --output type=image,push=true .
