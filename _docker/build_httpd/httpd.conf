#
# This is the main Apache HTTP server configuration file.  It contains the
# configuration directives that give the server its instructions.
# See <URL:http://httpd.apache.org/docs/2.4/> for detailed information.
# In particular, see
# <URL:http://httpd.apache.org/docs/2.4/mod/directives.html>
# for a discussion of each configuration directive.
#
ServerRoot "/usr/local/apache2"

#
# Listen: Allows you to bind Apache to specific IP addresses and/or ports, instead of the default. See also the <VirtualHost> directive.
Listen 8243
Listen 8280

#
# Dynamic Shared Object (DSO) Support
#
LoadModule mpm_event_module modules/mod_mpm_event.so
LoadModule authn_file_module modules/mod_authn_file.so
LoadModule authn_core_module modules/mod_authn_core.so
LoadModule authz_host_module modules/mod_authz_host.so
LoadModule authz_groupfile_module modules/mod_authz_groupfile.so
LoadModule authz_user_module modules/mod_authz_user.so
LoadModule authz_core_module modules/mod_authz_core.so
LoadModule access_compat_module modules/mod_access_compat.so
LoadModule auth_basic_module modules/mod_auth_basic.so
LoadModule reqtimeout_module modules/mod_reqtimeout.so
LoadModule filter_module modules/mod_filter.so
LoadModule mime_module modules/mod_mime.so
LoadModule log_config_module modules/mod_log_config.so
LoadModule env_module modules/mod_env.so
LoadModule headers_module modules/mod_headers.so
LoadModule setenvif_module modules/mod_setenvif.so
LoadModule version_module modules/mod_version.so
LoadModule proxy_module modules/mod_proxy.so
LoadModule proxy_http_module modules/mod_proxy_http.so
LoadModule ssl_module modules/mod_ssl.so
LoadModule http2_module modules/mod_http2.so
LoadModule unixd_module modules/mod_unixd.so
LoadModule status_module modules/mod_status.so
LoadModule autoindex_module modules/mod_autoindex.so
LoadModule dir_module modules/mod_dir.so
LoadModule alias_module modules/mod_alias.so
<IfModule unixd_module>
#
# If you wish httpd to run as a different user or group, you must run
# httpd as root initially and it will switch.
#
# User/Group: The name (or #number) of the user/group to run httpd as.
# It is usually good practice to create a dedicated user and group for
# running httpd, as with most system services.
#
User www-data
Group www-data

</IfModule>

# 'Main' server configuration
#
# The directives in this section set up the values used by the 'main' server, which responds to any requests that aren't handled by a
# <VirtualHost> definition.  These values also provide defaults for any <VirtualHost> containers you may define later in the file.
#
# All of these directives may appear inside <VirtualHost> containers, in which case these default settings will be overridden for the virtual host being defined.
#

#
# ServerAdmin: Your address, where problems with the server should be e-mailed.  This address appears on some server-generated pages, such as error documents.  e.g. admin@your-domain.com
#
ServerAdmin you@domatique

#
# ServerName gives the name and port that the server uses to identify itself.
ServerName __SERVER_NAME__

#
# Deny access to the entirety of your server's filesystem. You must
# explicitly permit access to web content directories in other
# <Directory> blocks below.
#
<Directory />
    AllowOverride none
    Require all denied
</Directory>

#
# The following lines prevent .htaccess and .htpasswd files from being
# viewed by Web clients.
#
<Files ".ht*">
    Require all denied
</Files>

#
# ErrorLog: The location of the error log file.
# If you do not specify an ErrorLog directive within a <VirtualHost> container, error messages relating to that virtual host will be
# logged here.  If you *do* define an error logfile for a <VirtualHost> container, that host's errors will be logged there and not here.
#
ErrorLog /proc/self/fd/2

#
# LogLevel: Control the number of messages logged to the error_log.
# Possible values include: debug, info, notice, warn, error, crit,alert, emerg.
#
LogLevel warn

<IfModule log_config_module>
    #
    # The following directives define some format nicknames for use with
    # a CustomLog directive (see below).
    #
    LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" combined
    LogFormat "%h %l %u %t \"%r\" %>s %b" common

    <IfModule logio_module>
      # You need to enable mod_logio.c to use %I and %O
      LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\" %I %O" combinedio
    </IfModule>

    #
    # The location and format of the access logfile (Common Logfile Format).
    # If you do not define any access logfiles within a <VirtualHost>
    # container, they will be logged here.  Contrariwise, if you *do*
    # define per-<VirtualHost> access logfiles, transactions will be
    # logged therein and *not* in this file.
    #
    CustomLog /proc/self/fd/1 common

    #
    # If you prefer a logfile with access, agent, and referer information
    # (Combined Logfile Format) you can use the following directive.
    #
    #CustomLog "logs/access_log" combined
</IfModule>

<IfModule headers_module>
    #
    # Avoid passing HTTP_PROXY environment to CGI's on this or any proxied
    # backend servers which have lingering "httpoxy" defects.
    # 'Proxy' request header is undefined by the IETF, not listed by IANA
    #
    RequestHeader unset Proxy early
</IfModule>


# Virtual hosts
#Include conf/extra/httpd-vhosts.conf
<VirtualHost *:8243>
	ServerName __SERVER_NAME__
	ProxyRequests Off
    ProxyPreserveHost On
	
	SSLEngine on
	SSLCertificateFile    "/usr/local/apache2/conf/ssl_conf/httpddomoticzserver.crt"
	SSLCertificateKeyFile "/usr/local/apache2/conf/ssl_conf/httpddomoticzserver.key"
	SSLStrictSNIVHostCheck Off
	SSLCipherSuite ALL:!aNULL:RC4+RSA:+HIGH:+MEDIUM:+LOW:+EXP:+eNULL

	# On fait du proxy vers un autre serveur en https
	SSLProxyEngine On
	# Disable SSLProxyCheck
	SSLProxyVerify none 
	SSLProxyCheckPeerCN off
	SSLProxyCheckPeerName off
	SSLProxyCheckPeerExpire off
  	
	ErrorLog /usr/local/apache2/logs/error.log
	LogFormat "%h %l %u %t \"%r\" %>s \"%{Referer}i\" \"%{User-Agent}i\"" combined
    CustomLog /usr/local/apache2/logs/access.log combined

	<Location "/">
		<RequireAny>
			Require expr %{HTTP_USER_AGENT} == '__RULES_ACCESS_1__'
			Require expr %{HTTP_USER_AGENT} == '__RULES_ACCESS_2__'
			Require expr %{HTTP_USER_AGENT} == '__RULES_ACCESS_3__'
		</RequireAny>
		ProxyPass https://192.168.1.83:8443/
		ProxyPassReverse https://192.168.1.83:8443/
    </Location>
</VirtualHost>

# Host pour le local
<VirtualHost *:8280>
	ServerName localhost:8280
	ProxyRequests Off
    ProxyPreserveHost On
	
	# SSLEngine off

	# On fait du proxy vers un autre serveur en https
	SSLProxyEngine On
	# Disable SSLProxyCheck
	SSLProxyVerify none 
	SSLProxyCheckPeerCN off
	SSLProxyCheckPeerName off
	SSLProxyCheckPeerExpire off
  	
	ErrorLog /usr/local/apache2/logs/error.log
	LogFormat "%h %l %u %t \"%r\" %>s \"%{Referer}i\" \"%{User-Agent}i\"" combined
    CustomLog /usr/local/apache2/logs/access.log combined

	<Location "/">
		<RequireAny>
			Require expr %{HTTP_USER_AGENT} == '__RULES_ACCESS_1__'
			Require expr %{HTTP_USER_AGENT} == '__RULES_ACCESS_2__'
			Require expr %{HTTP_USER_AGENT} == '__RULES_ACCESS_3__'
		</RequireAny>
		ProxyPass https://192.168.1.83:8443/
		ProxyPassReverse https://192.168.1.83:8443/
    </Location>
</VirtualHost>


# Local access to the Apache HTTP Server Manual
#Include conf/extra/httpd-manual.conf

# Configure mod_proxy_html to understand HTML4/XHTML1
<IfModule proxy_html_module>
	Include conf/extra/proxy-html.conf
</IfModule>

# Secure (SSL/TLS) connections
#Include conf/extra/httpd-ssl.conf
#
# Note: The following must must be present to support
#       starting without SSL on platforms with no /dev/random equivalent
#       but a statically compiled-in mod_ssl.
#
<IfModule ssl_module>
	SSLRandomSeed startup builtin
	SSLRandomSeed connect builtin
</IfModule>	